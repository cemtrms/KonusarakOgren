// <auto-generated />
using System;
using ExamKnsrkOgrnApp.SQLite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExamKnsrkOgrnApp.Migrations
{
    [DbContext(typeof(SQLiteDBContext))]
    [Migration("20201130193607_exm")]
    partial class exm
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ExamKnsrkOgrnApp.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TakenExamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChoiceId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("TakenExamId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("ExamKnsrkOgrnApp.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("ExamKnsrkOgrnApp.Models.Choice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("ExamKnsrkOgrnApp.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ArticleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("ExamKnsrkOgrnApp.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CorrectChoice")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ExamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("ExamKnsrkOgrnApp.Models.TakenExam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ExamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("TakenExams");
                });

            modelBuilder.Entity("ExamKnsrkOgrnApp.Models.Answer", b =>
                {
                    b.HasOne("ExamKnsrkOgrnApp.Models.Choice", "Choice")
                        .WithMany()
                        .HasForeignKey("ChoiceId");

                    b.HasOne("ExamKnsrkOgrnApp.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.HasOne("ExamKnsrkOgrnApp.Models.TakenExam", null)
                        .WithMany("Answers")
                        .HasForeignKey("TakenExamId");

                    b.Navigation("Choice");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ExamKnsrkOgrnApp.Models.Choice", b =>
                {
                    b.HasOne("ExamKnsrkOgrnApp.Models.Question", "Question")
                        .WithMany("Choices")
                        .HasForeignKey("QuestionId");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ExamKnsrkOgrnApp.Models.Exam", b =>
                {
                    b.HasOne("ExamKnsrkOgrnApp.Models.Article", "Article")
                        .WithMany("Exams")
                        .HasForeignKey("ArticleId");

                    b.Navigation("Article");
                });

            modelBuilder.Entity("ExamKnsrkOgrnApp.Models.Question", b =>
                {
                    b.HasOne("ExamKnsrkOgrnApp.Models.Exam", "Exam")
                        .WithMany("Questions")
                        .HasForeignKey("ExamId");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("ExamKnsrkOgrnApp.Models.TakenExam", b =>
                {
                    b.HasOne("ExamKnsrkOgrnApp.Models.Exam", "Exam")
                        .WithMany()
                        .HasForeignKey("ExamId");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("ExamKnsrkOgrnApp.Models.Article", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("ExamKnsrkOgrnApp.Models.Exam", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("ExamKnsrkOgrnApp.Models.Question", b =>
                {
                    b.Navigation("Choices");
                });

            modelBuilder.Entity("ExamKnsrkOgrnApp.Models.TakenExam", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
